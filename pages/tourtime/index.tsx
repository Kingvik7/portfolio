import Head from "next/head"
import Image from "next/image"
import styles from "../../styles/Home.module.css"
import NameTitle from "../NameTitle"
import { motion } from "framer-motion"
import NameAnim from "../NameAnim"
import ScrollInformer from "../ScrollInformer"
import NavBar from "../NavBar"
import Projects from "../projects"
import Details from "./Details"
import Footer from "../footer"
import FAQGrid from "https://framer.com/m/FAQ-Grid-uvJp.js@rbQiKXASeSNS2d01495V"
import { XMarkIcon } from "@heroicons/react/24/outline"
import stagemanager2 from "../../images/stagemanager2.png"
import frame1 from "./images/frame1.png"
import frame2 from "./images/frame2.jpg"
import { useEffect } from "react"
import gsap from "gsap"
import { ScrollTrigger } from "gsap/dist/ScrollTrigger"
import Para from "../Para"
import Title from "../title"

const callouts1 = [
    {
        name: "Function",
        description:
            "This project involves a Mobile Application on which the user's primary interaction with the system is clicking a picture of a Landmark or Tourist Destination they are visiting.",
    },
    {
        name: "Image processing",
        description:
            "The image will be processed by a Convolutional Neural Network in the Cloud to identify the landmark and then return information about it, as well as other nearby locations.",
    },
    {
        name: "Guided Tour Itinerary",
        description:
            "The standout feature is a Guided Tour Itinerary that will be presented to the user based on frequent tourist visitation patterns and curated to perfection.",
    },
    {
        name: "Community Feedback",
        description: "The users of the platform can submit new information about the locations they visit, and these facts will go through a crowd review process.",
    },
]

export default function Home(): JSX.Element {
    useEffect(() => {
        // gsap.registerPlugin(ScrollTrigger)
        gsap.timeline({}).fromTo(
            "#header",
            { opacity: 0 },
            {
                opacity: 1,
                y: "10px",
                ease: "power1.inOut",
            }
        )
        gsap.to("#header", {
            scale: "0.4",
            height: "400px",
            scrollTrigger: {
                trigger: "#header",
                start: "top top",
                end: "bottom top",
                scrub: true,
            },
        })
        gsap.to(".Projects", {
            color: "black",
        })
    }, [])
    return (
        <div className={styles.container}>
            <Head>
                <title>Vikrant Gurav - Tourtime</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <NavBar />
            <div className="bg-blue-100 innerShadow">
                <main
                    id="header"
                    className="z-0 mx-4 max-w-5xl xl:mx-auto inset-x-0 md:mx-12 lg:mx-24  px-2 py-28 sm:py-28 md:py-20 lg:py-36 flex md:flex-row justify-center flex-col  gap-4"
                >
                    <h1 className="w-full md:w-1/3 text-gray-700 text-3xl md:text-5xl align-middle justify-center my-auto  font-['SentientItalic']">
                        Tourtime
                    </h1>
                    <div className="sm:w-full text-center md:w-1/3">
                        <Image src={frame1} />
                    </div>
                </main>
            </div>
            <Details />
            <div className=" mx-4 my-5 max-w-5xl xl:mx-auto inset-x-0 md:mx-12 lg:mx-24 px-2">
                <Title text="How it Works" />
                <div className="mt-10 mb-10 space-y-12 lg:space-y-0 lg:grid lg:grid-cols-2 lg:gap-x-16 lg:gap-y-8">
                    {callouts1.map((callout) => (
                        <div key={callout.name} className="">
                            <h3 className="text-base font-semibold text-gray-900">
                                <a>
                                    {/* <span className="absolute inset-0" /> */}
                                    {callout.name}
                                </a>
                            </h3>
                            <div className="w-12 h-0.5 my-1.5 rounded-lg bg-gray-400"></div>
                            <p className="mt-1 text-sm text-gray-500">
                                {callout.description}
                            </p>
                        </div>
                    ))}
                </div>
                <Image src={frame2} />
            </div>
            <Footer />
        </div>
    )
}
